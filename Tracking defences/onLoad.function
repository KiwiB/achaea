// Tracks player defences.
//
// REQUIRES:
// Tracking gmcp
//
// API:
// tracking_defences.check_defence(DEFENCE)
//     Returns: true if the player has DEFENCE, otherwise false
//     Example of checking for thirdeye defence:
//         tracking_defences.check_def("thirdeye");

client.tracking_defences = (function () {
    "use strict";

    let defs = [];

    tracking_gmcp.subscribe("Char.Defences.Add", function (gmcp_args) {
        if (defs.indexOf(gmcp_args.name) === -1) {
            defs.push(gmcp_args.name);
        }
    });

    tracking_gmcp.subscribe("Char.Defences.List", function (gmcp_args) {
        defs = [];
        gmcp_args.forEach(function (defence) {
            defs.push(defence.name);
        });
    });

    tracking_gmcp.subscribe("Char.Defences.Remove", function (gmcp_args) {
        gmcp_args.forEach(function (defence) {
            const index = defs.indexOf(defence);
            if (index !== -1) {
                defs.splice(index, 1);
            }
        });
    });

    const check_defence = (defence) => (defs.indexOf(defence) === -1) ? false : true;

    return Object.freeze({
        check_defence
    });
}());